I used the yeoman flask-api generator to generate the next cut
at a flask REST application. I got a few errors and warnings when
running it.

First, it wanted to make sure I was running under a virtualenv, which
I was via:

source ./venv/bin/activate

Then after running "yo flask-api" I got these errors/warnings:

=========================================================================================
...
Installing collected packages: six, marshmallow, flask-marshmallow
  Found existing installation: six 1.4.1
    DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.
    Uninstalling six-1.4.1:
Exception:
Traceback (most recent call last):
  File "/Library/Python/2.7/site-packages/pip/basecommand.py", line 215, in main
    status = self.run(options, args)
  File "/Library/Python/2.7/site-packages/pip/commands/install.py", line 317, in run
    prefix=options.prefix_path,
  File "/Library/Python/2.7/site-packages/pip/req/req_set.py", line 736, in install
    requirement.uninstall(auto_confirm=True)
  File "/Library/Python/2.7/site-packages/pip/req/req_install.py", line 742, in uninstall
    paths_to_remove.remove(auto_confirm)
  File "/Library/Python/2.7/site-packages/pip/req/req_uninstall.py", line 115, in remove
    renames(path, new_path)
  File "/Library/Python/2.7/site-packages/pip/utils/__init__.py", line 267, in renames
    shutil.move(old, new)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 302, in move
    copy2(src, real_dst)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 131, in copy2
    copystat(src, dst)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 103, in copystat
    os.chflags(dst, st.st_flags)
OSError: [Errno 1] Operation not permitted: '/var/folders/g1/_n2n4lfj039dtvvlhbkd0ndh0000gn/T/pip-O3i5Xb-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/six-1.4.1-py2.7.egg-info'
Requirement already satisfied (use --upgrade to upgrade): psycopg2 in /Library/Python/2.7/site-packages
Requirement already satisfied (use --upgrade to upgrade): flask-sqlalchemy in /Library/Python/2.7/site-packages
Collecting marshmallow-sqlalchemy
  Downloading marshmallow_sqlalchemy-0.10.0-py2.py3-none-any.whl
Requirement already satisfied (use --upgrade to upgrade): Flask>=0.10 in /Library/Python/2.7/site-packages (from flask-sqlalchemy)
Requirement already satisfied (use --upgrade to upgrade): SQLAlchemy>=0.7 in /Library/Python/2.7/site-packages (from flask-sqlalchemy)
Collecting marshmallow>=2.0.0 (from marshmallow-sqlalchemy)
  Using cached marshmallow-2.9.1-py2.py3-none-any.whl
Requirement already satisfied (use --upgrade to upgrade): Werkzeug>=0.7 in /Library/Python/2.7/site-packages (from Flask>=0.10->flask-sqlalchemy)
Requirement already satisfied (use --upgrade to upgrade): Jinja2>=2.4 in /Library/Python/2.7/site-packages (from Flask>=0.10->flask-sqlalchemy)
Requirement already satisfied (use --upgrade to upgrade): itsdangerous>=0.21 in /Library/Python/2.7/site-packages (from Flask>=0.10->flask-sqlalchemy)
Requirement already satisfied (use --upgrade to upgrade): MarkupSafe in /Library/Python/2.7/site-packages (from Jinja2>=2.4->Flask>=0.10->flask-sqlalchemy)
Installing collected packages: marshmallow, marshmallow-sqlalchemy
Successfully installed marshmallow-2.9.1 marshmallow-sqlalchemy-0.10.0
Writing requirements file...
   create requirements.txt

All set!

You can run Flask's local server by executing the manager script:
./manage.py runserver

For safety's sake, this defaults to a production config with DEBUG turned off.
You can change the config by setting the APP_CONFIG
environment variable to "development" in your shell:
export APP_CONFIG=development
=========================================================================================
Note, I'm setting that environment variable now.

Running that script blew up due to a conflict with the "six" package. After googling around
and trying a whole bunch of things, I think Maybe this works?

pip install --ignore-installed six
pip install flask-api --upgrade --ignore-installed six

Also did this: pip install --upgrade flask

I changed the source_me to set environment variables:
export APP_DEVELOPMENT_DATABASE_URI="postgresql://localhost/writertoys"
export APP_CONFIG=development

I get errors when running ./manage.py shell (in order to try db.create_all())
$ ./manage.py shell
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.script is deprecated, use flask_script instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.marshmallow is deprecated, use flask_marshmallow instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.sqlalchemy is deprecated, use flask_sqlalchemy instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask_sqlalchemy/__init__.py:800: UserWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True to suppress this warning.
  warnings.warn('SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True to suppress this warning.')

Then ./manage.py runserver starts the flask server, but gives nearly as many warnings as a maven process:

$ ./manage.py runserver
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.script is deprecated, use flask_script instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.marshmallow is deprecated, use flask_marshmallow instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.sqlalchemy is deprecated, use flask_sqlalchemy instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask_sqlalchemy/__init__.py:800: UserWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True to suppress this warning.
  warnings.warn('SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True to suppress this warning.')
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.script is deprecated, use flask_script instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.marshmallow is deprecated, use flask_marshmallow instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask/exthook.py:71: ExtDeprecationWarning: Importing flask.ext.sqlalchemy is deprecated, use flask_sqlalchemy instead.
  .format(x=modname), ExtDeprecationWarning
/Library/Python/2.7/site-packages/flask_sqlalchemy/__init__.py:800: UserWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True to suppress this warning.
  warnings.warn('SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True to suppress this warning.')
 * Debugger is active!
 * Debugger pin code: 132-730-298

That works, but there's nothing there yet. Let's try making a resource? How about "names"?

yo flask-api:resource names

That says:

$ yo flask-api:resource names
? Which HTTP methods would you like to support? (Press <space> to select)GET
Creating endpoint at /api/v1/names
   create app/models/names.py
   create app/schemas/names.py
   create app/api_v1/names.py

All set!

Be sure to import your fancy new endpoint into your API blueprint
in your API package's __init__.py, like this:
from . import names

I decided I needed the other HTTP verbs too, so I regenerated it:

$ yo flask-api:resource names
? Which HTTP methods would you like to support? GET, POST, PUT, DELETE
Creating endpoint at /api/v1/names
identical app/models/names.py
identical app/schemas/names.py
 conflict app/api_v1/names.py
? Overwrite app/api_v1/names.py? overwrite
    force app/api_v1/names.py

All set!

Be sure to import your fancy new endpoint into your API blueprint
in your API package's __init__.py, like this:
from . import names

I did what it said, but it can't find them:

File "/Users/ron/Projects/github/writertoys/writertoys/app/__init__.py", line 7, in <module>
    from . import names
ImportError: cannot import name names

The trick was to import from models, rather than ".", and to do that AFTER the db variable
is set:
=========================================================================================
db = SQLAlchemy()
ma = Marshmallow()

# names was generated using $ yo flask-api:resource names
from models import names
=========================================================================================
I finally managed to get rid of all the warnings by editing the generated code.

The methods that handle the endpoints are all stubbed out with "pass" right now. I need
to add some code to actually do stuff.

This looks like a good place to start looking for next steps:
http://blog.luisrei.com/articles/flaskrest.html



