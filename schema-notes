Requirements:
  a) this program doesn't need to be fast
  b) most things could be in a generic schema with metadata to control it

RawNames:
  1) ID
  2) name

NameTypes:
  1) ID
  2) type (e.g. first, last, middle)

NameOrigin:
  1) ID
  2) origin (e.g. asian, fantasy, greek, american)

Names:
  1) ID
  2) RawNames id
  3) NameTypes id
  4) NameOrigin id

In this structure, if you had the same name used as a first or last name, or if
you had multiple origins with the same name, you'd have multiple Names records.

Everything else could probably just be metadata driven. Something like:

Node:
  1) ID
  2) Name
  3) NodeType
  4) Description
  5) Properties

Edge:
  1) ID
  2) EdgeType
  3) NodeIdFrom
  4) NodeIdTo
  5) Properties

Note that this implies directionality, which you might want sometimes. Sometimes
they're likely to be bi-directional -- for example, a story con have multiple 
characters, and a character can be part of multiple stories.
